// Mathematical operations in Xypher

func testArithmetic() -> void {
    let a: i32 = 10;
    let b: i32 = 3;
    
    say("Addition:", a + b);
    say("Subtraction:", a - b);
    say("Multiplication:", a * b);
    say("Division:", a / b);
    say("Modulo:", a % b);
}

func testComparison() -> void {
    let x: i32 = 5;
    let y: i32 = 10;
    
    if (x < y) {
        say("x is less than y");
    }
    
    if (x <= y) {
        say("x is less than or equal to y");
    }
    
    if (y > x) {
        say("y is greater than x");
    }
    
    if (x == x) {
        say("x equals x");
    }
    
    if (x != y) {
        say("x not equals y");
    }
}

func testLogical() -> void {
    let a: bool = true;
    let b: bool = false;
    
    if (a && !b) {
        say("a is true AND b is false");
    }
    
    if (a || b) {
        say("a OR b is true");
    }
}

func power(base: i32, exp: i32) -> i32 {
    if (exp == 0) {
        return 1;
    }
    
    let result: i32 = base;
    let i: i32 = 1;
    
    loopwhile (i < exp) {
        result = result * base;
        i = i + 1;
    }
    
    return result;
}

func main() -> i32 {
    say("=== Arithmetic Operations ===");
    testArithmetic();
    
    say("\n=== Comparison Operations ===");
    testComparison();
    
    say("\n=== Logical Operations ===");
    testLogical();
    
    say("\n=== Power Function ===");
    let pow1: i32 = power(2, 8);
    say("2^8 =", pow1);
    
    let pow2: i32 = power(3, 4);
    say("3^4 =", pow2);
    
    return 0;
}

