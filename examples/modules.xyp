func mathAdd(a: i32, b: i32) -> i32 {
    return a + b;
}

func mathSub(a: i32, b: i32) -> i32 {
    return a - b;
}

func mathMul(a: i32, b: i32) -> i32 {
    return a * b;
}

func mathDiv(a: i32, b: i32) -> i32 {
    if (b == 0) {
        return 0;
    }
    return a / b;
}

func utilsIsEven(n: i32) -> bool {
    return (n % 2 == 0);
}

func utilsIsOdd(n: i32) -> bool {
    return (n % 2 != 0);
}

func utilsSwap(a: i32, b: i32) -> void {
    say("Before swap: a =", a, ", b =", b);
    let temp: i32 = a;
    a = b;
    b = temp;
    say("After swap: a =", a, ", b =", b);
}

func main() -> i32 {
    say("Module System Simulation");
    say("Using math and utils functions");
    
    say("\n=== Math Module ===");
    say("add(10, 5) =", mathAdd(10, 5));
    say("sub(10, 5) =", mathSub(10, 5));
    say("mul(10, 5) =", mathMul(10, 5));
    say("div(10, 5) =", mathDiv(10, 5));
    
    say("\n=== Utils Module ===");
    let num: i32 = 42;
    if (utilsIsEven(num)) {
        say(num, "is even");
    }
    
    num = 43;
    if (utilsIsOdd(num)) {
        say(num, "is odd");
    }
    
    say("\n=== Swap Demo ===");
    utilsSwap(10, 20);
    
    return 0;
}

